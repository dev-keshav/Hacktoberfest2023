class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>ans;
        int n=matrix.size();
        int m=matrix[0].size();
        int t=0;
        int l=0;
        int b= n-1;
        int r=m-1;
        int d=1;
        while(t<=b && l<=r){
            if(d==1){
                for(int i=l;i<=r;i++){
                    ans.push_back(matrix[t][i]);
                    
                }
                t++;
                    d=2;
                    continue;
            }

            if(d==2){
                for(int i=t;i<=b;i++){
                    ans.push_back(matrix[i][r]);
                    
                }
                r--;
                    d=3;
                    continue;
            }
            if(d==3){
                for(int i=r;i>=l;i--){
                    ans.push_back(matrix[b][i]);
                    
                }
                b--;
                    d=4;
                    continue;
            }
            if(d==4){
                for(int i=b;i>=t;i--){
                    ans.push_back(matrix[i][l]);
                    
                }
                l++;
                    d=1;
                    continue;
            }
        }
    return ans;
    }
};
