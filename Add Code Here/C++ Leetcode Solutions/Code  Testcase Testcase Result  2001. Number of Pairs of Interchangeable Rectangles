You are given n rectangles represented by a 0-indexed 2D integer array rectangles, where rectangles[i] = [widthi, heighti] denotes the width and height of the ith rectangle.
Two rectangles i and j (i < j) are considered interchangeable if they have the same width-to-height ratio. More formally, two rectangles are interchangeable if widthi/heighti == widthj/heightj (using decimal division, not integer division).
Return the number of pairs of interchangeable rectangles in rectangles.

class Solution {
public:
    long long interchangeableRectangles(vector<vector<int>>& rectangles) {
        long long ans = 0;
        int n = rectangles.size();
        map<double, int>mpp;
        for(auto it : rectangles) { double temp = (it[0]/(it[1] * 1.0)); mpp[temp]++;}
        for(auto it : mpp){
            long long temp = (long long)it.second * (it.second - 1)/2;
            ans += temp;
        }

        return ans;
    }
};
